apply plugin: 'org.springframework.boot'

dependencies {
	//implementation project( ':async-event-handler')
	//implementation project( ':async-event-bus')
	//implementation project( ':mysql')
	//implementation 'org.reactivecommons.utils:object-mapper:0.1.0'
	//implementation project( ':mongo-repository')
	//implementation project( ':reactive-web')



    implementation project(':model')
    implementation project(':usecase')
    implementation project(':reactive-web-query')
    implementation project(':rabbitmq-listener-query')
    implementation project (':mysql-query')
    implementation project( ':mapper')
    implementation 'org.reactivecommons.utils:object-mapper:0.1.0'
    //implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    runtimeOnly('org.springframework.boot:spring-boot-devtools')
    testImplementation 'com.tngtech.archunit:archunit:1.0.1'

    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-security
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-security', version: '3.1.1'
// https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt-api
    implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.5'
// https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt-jackson
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.5'

// https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt-impl
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.5'
    implementation 'io.asyncer:r2dbc-mysql:1.0.3'

    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-data-r2dbc
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-r2dbc', version: '3.1.4'
    // https://mvnrepository.com/artifact/org.springdoc/springdoc-openapi-starter-webflux-ui
    implementation group: 'org.springdoc', name: 'springdoc-openapi-starter-webflux-ui', version: '2.2.0'
}

tasks.register('explodedJar', Copy) {
    with jar
    into "${buildDir}/exploded"
}

jar {
    // To disable the *-plain.jar
    enabled = false
}

bootJar {
    // Sets output jar name
    archiveFileName = "${project.getParent().getName()}.${archiveExtension.get()}"
}